buildscript {
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/plugins-release/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'
apply plugin: 'kotlin-noarg'


/*
 * Copyright 2018 Coupang Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// NOTE: requery 사용 시에는 allOpen, noArg 를 꼭 지정해줘야 합니다.
allOpen {
    annotation("io.requery.Entity")
    annotation("io.requery.Superclass")
}
noArg {
    annotation("io.requery.Entity")
    annotation("io.requery.Superclass")
    invokeInitializers = true
}

sourceSets {
    generated {
        "${buildDir}/generated/source/kapt/main/"
    }
}

idea {
    module {
        sourceDirs += file("${buildDir}/generated/source/kapt/main/")
        testSourceDirs += file("${buildDir}/generated/source/kapt/test/")
        generatedSourceDirs += file("${buildDir}/generated/source/kapt/main/")
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core"
    testImplementation "org.jetbrains.kotlin:kotlin-test"
    
    implementation "io.requery:requery"
    implementation "io.requery:requery-kotlin"
    implementation "io.requery:requery-jackson"

    // For Kotlin classes
    kapt "io.requery:requery-processor"
    kaptTest "io.requery:requery-processor"

    compile "io.github.microutils:kotlin-logging"

    // spring framework
    compile "org.springframework:spring-beans"
    compile "org.springframework:spring-context"
    compile "org.springframework:spring-expression"
    compile "org.springframework:spring-jdbc"
    compile "org.springframework:spring-tx"
    compile "org.springframework.data:spring-data-commons"

    optional "org.cache2k:cache2k-core"
    optional "org.redisson:redisson"

    optional "org.threeten:threetenbp"
    optional "joda-time:joda-time"

    testImplementation "com.nhaarman:mockito-kotlin"
    testImplementation "com.fasterxml.jackson.module:jackson-module-kotlin"
}

compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xjsr305=strict", "-Xjvm-default=enable"]
        javaParameters = true
        suppressWarnings = false
    }
}
compileTestKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xjsr305=strict", "-Xjvm-default=enable"]
        javaParameters = true
        suppressWarnings = false
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}


